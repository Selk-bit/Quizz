{"ast":null,"code":"var _jsxFileName = \"/home/sellam/Desktop/Quizz/quizz/src/Component/QuizzApp.js\";\nimport React, { Component } from 'react';\nimport './QuizzApp.css';\nimport AllConsts from './Const';\nimport Modal from './SimpleModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Questions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      q: {\n        0: {\n          \"What is React ?\": {\n            \"Framework\": 0,\n            \"Libarary\": 1,\n            \"ProgrammingLanguage\": 0\n          }\n        },\n        1: {\n          \"What is Angular ?\": {\n            \"Framework\": 1,\n            \"Libarary\": 0,\n            \"ProgrammingLanguage\": 0\n          }\n        },\n        2: {\n          \"How Trash is Kellout's Vision ?\": {\n            \"Very Trash\": 1,\n            \"Mildely Trash\": 0,\n            \"Not Trash\": 0\n          }\n        }\n      },\n      current_question: 0,\n      score: 0,\n      answered: '',\n      extended: 1,\n      isCorrect: ''\n    };\n\n    this.GetAnswer = a => {\n      if (a == 0) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Correct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.Next = () => {\n      let current = this.state.current_question + 1;\n\n      if (current < Object.keys(this.state.q).length) {\n        this.setState({\n          current_question: current,\n          extended: 0\n        });\n      }\n    };\n\n    this.Toggle = (a, b, c) => {\n      const arr = Object.keys(this.state.q[this.state.current_question]);\n      this.setState({\n        answered: b,\n        isCorrect: \"False\"\n      });\n      this[a].style.display = \"inline\";\n      const scoreholder = this.state.score;\n\n      if (this[a].textContent == \"Correct\") {\n        this.setState({\n          score: scoreholder + 1,\n          isCorrect: \"Correct\"\n        });\n        this[a].style.color = \"green\";\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.extended == 0) {\n      this.setState({\n        extended: 1\n      });\n    }\n  }\n\n  render() {\n    const arr = Object.keys(this.state.q[this.state.current_question]);\n    const holder = this.state.q[this.state.current_question];\n    const answers = holder[arr[0]];\n    const answersArray = Object.keys(answers);\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-container\",\n            children: arr[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz-options\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: answersArray.map(j => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: this.state.answered == arr[0] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"input-radio one-a\",\n                      name: \"yes-1\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"one-a\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"alphabet\",\n                        children: answersArray.indexOf(j) + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 33\n                      }, this), \" \", j, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"icon jdsjkefkefkefefexco\",\n                        src: AllConsts.img,\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 101\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"input-radio\",\n                      id: \"one-a\",\n                      name: \"yes-1\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      onClick: () => this.Toggle(arr[0] + j, arr[0], j + arr[0]),\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"alphabet\",\n                        children: answersArray.indexOf(j) + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 33\n                      }, this), \" \", j, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"icon jdsjkefkefkefefexco\",\n                        src: AllConsts.img,\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 101\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 25\n                }, this), this.state.extended == 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  ref: a => {\n                    this[arr[0] + j] = a;\n                  },\n                  style: {\n                    color: \"red\",\n                    display: \"none\"\n                  },\n                  children: this.GetAnswer(answers[j])\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 31\n                }, this), this.state.isCorrect == \"Correct\" && /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 67\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 31\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-counter\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"score-text\",\n            children: [\"Your Score: \", this.state.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), this.state.answered == arr[0] ? /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"btn\",\n          type: \"submit\",\n          onClick: this.Next,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"btn\",\n          type: \"submit\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 103\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Questions;","map":{"version":3,"sources":["/home/sellam/Desktop/Quizz/quizz/src/Component/QuizzApp.js"],"names":["React","Component","AllConsts","Modal","Questions","state","q","current_question","score","answered","extended","isCorrect","GetAnswer","a","Next","current","Object","keys","length","setState","Toggle","b","c","arr","style","display","scoreholder","textContent","color","componentDidUpdate","render","holder","answers","answersArray","map","j","indexOf","img"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './QuizzApp.css';\nimport AllConsts from './Const';\nimport Modal from './SimpleModal'\n\n\nclass Questions extends Component {\n\n\n    state = {\n        q : {\n            0 : {\"What is React ?\" : {\"Framework\" : 0, \"Libarary\" : 1, \"ProgrammingLanguage\" : 0}}, \n            1 : {\"What is Angular ?\" : {\"Framework\" : 1, \"Libarary\" : 0, \"ProgrammingLanguage\" : 0}},\n            2 : {\"How Trash is Kellout's Vision ?\" : {\"Very Trash\" : 1, \"Mildely Trash\" : 0, \"Not Trash\" : 0}},\n        },\n        current_question: 0, \n        score : 0,\n        answered: '',\n        extended: 1,\n        isCorrect : ''\n    }\n\n    componentDidUpdate() {\n        if(this.state.extended == 0){\n            this.setState({extended: 1})\n        }\n\n    }\n\n   \n   \n\n    GetAnswer = (a) => {\n        if(a == 0) {\n            return <p>Wrong</p>\n        }\n        else {\n            return <p>Correct</p>\n        }\n\n    }\n\n    Next = () => {\n        let current = this.state.current_question+1;\n        if(current < Object.keys(this.state.q).length) {\n        this.setState({current_question: current, extended: 0});\n        }\n        \n    }\n\n    Toggle = (a, b, c) => {\n        const arr = Object.keys(this.state.q[this.state.current_question]);\n        this.setState({answered: b, isCorrect: \"False\"});\n        this[a].style.display =\"inline\";\n        const scoreholder = this.state.score;\n        if(this[a].textContent == \"Correct\") {\n            this.setState({score: scoreholder+1, isCorrect: \"Correct\"});\n            this[a].style.color =\"green\";\n        }\n\n\n\n        \n\n\n\n    }\n\n\n\n    render ()\n    {\n        \n        const arr = Object.keys(this.state.q[this.state.current_question]);\n        const holder =  this.state.q[this.state.current_question];\n        const answers = holder[arr[0]]\n        const answersArray = Object.keys(answers);\n\n\n        return (\n            <section>\n            <main>\n            <div>\n                <p className=\"text-container\">{arr[0]}</p>\n                <div className=\"quiz-options\">\n                <ul>{answersArray\n                    .map(j => <div>\n                        <div>\n                            \n                            {this.state.answered == arr[0] ?\n                            <div>\n                            <input type=\"radio\" className=\"input-radio one-a\" name=\"yes-1\" required />\n                            <label  htmlFor=\"one-a\">\n                                <span className=\"alphabet\">{answersArray.indexOf(j) + 1}</span> {j} <img className=\"icon jdsjkefkefkefefexco\" src={AllConsts.img} alt=\"\" />\n                            </label> \n                            </div>\n                            :\n                            <div>\n                            <input type=\"radio\" className=\"input-radio\" id=\"one-a\" name=\"yes-1\" required />\n                            <label onClick={() => this.Toggle(arr[0] + j, arr[0], j + arr[0])} >\n                                <span className=\"alphabet\">{answersArray.indexOf(j) + 1}</span> {j} <img className=\"icon jdsjkefkefkefefexco\" src={AllConsts.img} alt=\"\" />\n                            </label>\n                            </div> }\n                        </div>\n\n                    \n                        \n                        {this.state.extended == 1 ? \n                            <p ref={a => { this[arr[0] + j] = a }} style={{color: \"red\", display: \"none\"}}>{this.GetAnswer(answers[j])}</p> \n                            : <p></p>}\n                            {this.state.isCorrect == \"Correct\" && <Modal />}\n                        </div>)}\n                        \n\n                </ul>\n                </div>\n            </div>\n            <div className=\"score-counter\">\n                    <p className=\"score-text\">Your Score: {this.state.score}</p>\n            </div>\n            {this.state.answered == arr[0] ? <a id=\"btn\" type=\"submit\" onClick={this.Next}>Next</a> : <a id=\"btn\" type=\"submit\">Next</a>}\n            </main>\n            </section>\n        );\n    } \n\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}