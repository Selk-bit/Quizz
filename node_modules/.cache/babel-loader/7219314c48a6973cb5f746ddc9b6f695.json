{"ast":null,"code":"var _jsxFileName = \"/home/sellam/Desktop/Quizz/quizz/src/Component/Questions.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Questions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      q: {\n        0: {\n          \"What is React ?\": {\n            \"Framework\": 0,\n            \"Libarary\": 1,\n            \"ProgrammingLanguage\": 0\n          }\n        },\n        1: {\n          \"What is Angular ?\": {\n            \"Framework\": 1,\n            \"Libarary\": 0,\n            \"ProgrammingLanguage\": 0\n          }\n        },\n        2: {\n          \"How Trash is Kellout's Vision ?\": {\n            \"Very Trash\": 1,\n            \"Mildely Trash\": 0,\n            \"Not Trash\": 0\n          }\n        }\n      },\n      current_question: 0,\n      score: 0,\n      answered: '',\n      extended: 1\n    };\n\n    this.GetAnswer = a => {\n      if (a == 0) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 20\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Correct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.Next = () => {\n      let current = this.state.current_question + 1;\n      this.setState({\n        current_question: current,\n        extended: 0\n      });\n    };\n\n    this.Toggle = (a, b) => {\n      this.setState({\n        answered: b\n      });\n      this[a].style.display = \"inline\";\n      const scoreholder = this.state.score;\n\n      if (this[a].textContent == \"Correct\") {\n        this.setState({\n          score: scoreholder + 1\n        });\n        this[a].style.color = \"green\";\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    this.setState({\n      extended: 1\n    });\n  }\n\n  render() {\n    const arr = Object.keys(this.state.q[this.state.current_question]);\n    const holder = this.state.q[this.state.current_question];\n    const answers = holder[arr[0]];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: arr[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.keys(answers).map(j => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [this.state.answered == arr[0] ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: j\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 69\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => this.Toggle(arr[0] + j, arr[0]),\n              children: j\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 82\n            }, this), this.state.extended == 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              ref: a => {\n                this[arr[0] + j] = a;\n              },\n              style: {\n                color: \"red\",\n                display: \"none\"\n              },\n              children: this.GetAnswer(answers[j])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 53\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 167\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: 600\n        },\n        children: [\"Your Score Is : \", this.state.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.Next,\n        style: {\n          marginLeft: 630\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Questions;","map":{"version":3,"sources":["/home/sellam/Desktop/Quizz/quizz/src/Component/Questions.js"],"names":["React","Component","Questions","state","q","current_question","score","answered","extended","GetAnswer","a","Next","current","setState","Toggle","b","style","display","scoreholder","textContent","color","componentDidUpdate","render","arr","Object","keys","holder","answers","map","j","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Questions extends Component {\n\n\n    state = {\n        q : {\n            0 : {\"What is React ?\" : {\"Framework\" : 0, \"Libarary\" : 1, \"ProgrammingLanguage\" : 0}}, \n            1 : {\"What is Angular ?\" : {\"Framework\" : 1, \"Libarary\" : 0, \"ProgrammingLanguage\" : 0}},\n            2 : {\"How Trash is Kellout's Vision ?\" : {\"Very Trash\" : 1, \"Mildely Trash\" : 0, \"Not Trash\" : 0}},\n        },\n        current_question: 0, \n        score : 0,\n        answered: '',\n        extended : 1,\n    }\n\n    componentDidUpdate() {\n        this.setState({extended: 1})\n    }\n   \n\n    GetAnswer = (a) => {\n        if(a == 0) {\n            return <p>Wrong</p>\n        }\n        else {\n            return <p>Correct</p>\n        }\n\n    }\n\n    Next = () => {\n        let current = this.state.current_question+1;\n        this.setState({current_question: current, extended: 0});\n        \n    }\n\n    Toggle = (a, b) => {\n        this.setState({answered: b});\n        this[a].style.display =\"inline\";\n        const scoreholder = this.state.score;\n        if(this[a].textContent == \"Correct\") {\n            this.setState({score: scoreholder+1});\n            this[a].style.color =\"green\";\n        }\n\n\n    }\n\n\n\n    render ()\n    {\n        \n        const arr = Object.keys(this.state.q[this.state.current_question]);\n        const holder =  this.state.q[this.state.current_question];\n        const answers = holder[arr[0]]\n\n\n        return (\n            <div>\n            <div>\n                <p>{arr[0]}</p>\n                <ul>{Object.keys(answers)\n                    .map(j => <div>{this.state.answered == arr[0] ? <p>{j}</p> : <p onClick={() => this.Toggle(arr[0] + j, arr[0])}>{j}</p> }\n                        {this.state.extended == 1 ? <p ref={a => { this[arr[0] + j] = a }} style={{color: \"red\", display: \"none\"}}>{this.GetAnswer(answers[j])}</p> : <p></p>}\n                        </div>)}\n                </ul>\n            </div>\n            <p style={{marginLeft: 600}}>Your Score Is : {this.state.score}</p>\n            <button onClick={this.Next} style={{marginLeft: 630}}>Next</button>\n            </div>\n        );\n    } \n\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}