{"ast":null,"code":"var _jsxFileName = \"/home/sellam/Desktop/Quizz/quizz/src/Component/Questions.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Questions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      q: {\n        \"What is React ?\": {\n          \"Framework\": 0,\n          \"Libarary\": 1,\n          \"ProgrammingLanguage\": 0\n        },\n        \"What is Angular ?\": {\n          \"Framework\": 1,\n          \"Libarary\": 0,\n          \"ProgrammingLanguage\": 0\n        }\n      },\n      current_question: '',\n      score: 0,\n      answered: ''\n    };\n\n    this.GetAnswer = a => {\n      if (a == 0) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Correct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.Toggle = (a, b) => {\n      this.setState({\n        answered: b\n      });\n      this[a].style.display = \"inline\";\n      const scoreholder = this.state.score;\n\n      if (this[a].textContent == \"Correct\") {\n        this.setState({\n          score: scoreholder + 1\n        });\n        this[a].style.color = \"green\";\n      }\n    };\n  }\n\n  componentWillMount() {\n    const qq = Object.keys(this.state.q);\n    this.setState({\n      current_question: qq[0]\n    });\n  }\n\n  render() {\n    console.log(\"zbiii\");\n    console.log(this.state.current_question);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.current_question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.keys(this.state.q[this.state.current_question]).map(j => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [this.state.answered == this.state.current_question ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: j\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 90\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => this.Toggle(this.state.current_question + j, this.state.current_question),\n              children: j\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 103\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              ref: a => {\n                this[this.state.current_question + j] = a;\n              },\n              style: {\n                color: \"red\",\n                display: \"none\"\n              },\n              children: this.GetAnswer(this.state.q[this.state.current_question][j])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: 600\n        },\n        children: [\"Your Score Is : \", this.state.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: 600\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Questions;","map":{"version":3,"sources":["/home/sellam/Desktop/Quizz/quizz/src/Component/Questions.js"],"names":["React","Component","Questions","state","q","current_question","score","answered","GetAnswer","a","Toggle","b","setState","style","display","scoreholder","textContent","color","componentWillMount","qq","Object","keys","render","console","log","map","j","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Questions extends Component {\n\n\n    state = {\n        q : {\n            \"What is React ?\" : {\"Framework\" : 0, \"Libarary\" : 1, \"ProgrammingLanguage\" : 0}, \n            \"What is Angular ?\" : {\"Framework\" : 1, \"Libarary\" : 0, \"ProgrammingLanguage\" : 0},\n        },\n        current_question: '', \n        score : 0,\n        answered: '',\n    }\n\n    componentWillMount(){\n\n        const qq = Object.keys(this.state.q);\n        this.setState({current_question: qq[0]});\n    }\n\n    GetAnswer = (a) => {\n        if(a == 0) {\n            return <p>Wrong</p>\n        }\n        else {\n            return <p>Correct</p>\n        }\n\n    }\n\n    Toggle = (a, b) => {\n        this.setState({answered: b});\n        this[a].style.display =\"inline\";\n        const scoreholder = this.state.score;\n        if(this[a].textContent == \"Correct\") {\n            this.setState({score: scoreholder+1});\n            this[a].style.color =\"green\";\n        }\n\n\n    }\n\n\n    render ()\n    {\n        console.log(\"zbiii\")\n        console.log(this.state.current_question)\n        return (\n            <div>\n            <div>\n                <p>{this.state.current_question}</p>\n                <ul>{Object.keys(this.state.q[this.state.current_question])\n                    .map(j => <div>{this.state.answered == this.state.current_question ? <p>{j}</p> : <p onClick={() => this.Toggle(this.state.current_question + j, this.state.current_question)}>{j}</p> }\n                        <p ref={a => { this[this.state.current_question + j] = a }} style={{color: \"red\", display: \"none\"}}>{this.GetAnswer(this.state.q[this.state.current_question][j])}</p>\n                        </div>)}\n                </ul>\n            </div>\n            <p style={{marginLeft: 600}}>Your Score Is : {this.state.score}</p>\n            <button style={{marginLeft: 600}}>Next</button>\n            </div>\n        );\n    }\n\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}