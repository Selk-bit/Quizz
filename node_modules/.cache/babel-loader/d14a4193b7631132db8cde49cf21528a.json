{"ast":null,"code":"var _jsxFileName = \"/home/sellam/Desktop/Quizz/quizz/src/Component/Questions.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Questions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      q: {\n        \"What is React ?\": {\n          \"Framework\": 0,\n          \"Libarary\": 1,\n          \"ProgrammingLanguage\": 0\n        },\n        \"What is Angular ?\": {\n          \"Framework\": 1,\n          \"Libarary\": 0,\n          \"ProgrammingLanguage\": 0\n        }\n      },\n      score: 0,\n      answered: ''\n    };\n\n    this.GetAnswer = a => {\n      if (a == 0) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 20\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Correct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.Toggle = a => {\n      let res = a.split(\"   \", 1);\n      this.setState({\n        answered: res\n      });\n      this[a].style.display = \"inline\";\n      const scoreholder = this.state.score;\n\n      if (this[a].textContent == \"Correct\") {\n        this.setState({\n          score: scoreholder + 1,\n          answered: res\n        });\n      }\n    };\n  }\n\n  render() {\n    const questions = Object.keys(this.state.q);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [questions.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.keys(this.state.q[i]).map(j => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [this.state.answered == i ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: j\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 64\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => this.Toggle(i + j, i),\n              children: j\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 77\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              ref: a => {\n                this[i + j] = a;\n              },\n              style: {\n                color: \"red\",\n                display: \"none\"\n              },\n              children: this.GetAnswer(this.state.q[i][j])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: 600\n        },\n        children: [\"Your Score Is : \", this.state.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Questions;","map":{"version":3,"sources":["/home/sellam/Desktop/Quizz/quizz/src/Component/Questions.js"],"names":["React","Component","Questions","state","q","score","answered","GetAnswer","a","Toggle","res","split","setState","style","display","scoreholder","textContent","render","questions","Object","keys","map","i","j","color","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Questions extends Component {\n\n\n    state = {\n        q : {\n            \"What is React ?\" : {\"Framework\" : 0, \"Libarary\" : 1, \"ProgrammingLanguage\" : 0}, \n            \"What is Angular ?\" : {\"Framework\" : 1, \"Libarary\" : 0, \"ProgrammingLanguage\" : 0},\n        },\n        score : 0,\n        answered: '',\n    }\n\n    GetAnswer = (a) => {\n        if(a == 0) {\n            return <p>Wrong</p>\n        }\n        else {\n            return <p>Correct</p>\n        }\n\n    }\n\n    Toggle = (a) => {\n        let res = a.split(\"   \", 1);\n        this.setState({answered: res});\n        this[a].style.display =\"inline\";\n        const scoreholder = this.state.score;\n        if(this[a].textContent == \"Correct\") {\n            this.setState({score: scoreholder+1, answered: res});\n        }\n\n\n    }\n\n\n    render ()\n    {\n        const questions = Object.keys(this.state.q);\n        return (\n            <div>{questions.map(i => \n            <div>\n                <p>{i}</p>\n                <ul>{Object.keys(this.state.q[i])\n                    .map(j => <div>{this.state.answered == i ? <p>{j}</p> : <p onClick={() => this.Toggle(i + j, i)}>{j}</p> }\n                        <p ref={a => { this[i + j] = a }} style={{color: \"red\", display: \"none\"}}>{this.GetAnswer(this.state.q[i][j])}</p>\n                        </div>)}\n                </ul>\n            </div>)}\n            <p style={{marginLeft: 600}}>Your Score Is : {this.state.score}</p>\n            </div>\n        );\n    }\n\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}