{"ast":null,"code":"var _jsxFileName = \"/home/sellam/Desktop/Quizz/quizz/src/Component/Questions.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Questions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      q: {\n        \"What is React ?\": {\n          \"Framework\": 0,\n          \"Libarary\": 1,\n          \"ProgrammingLanguage\": 0\n        },\n        \"What is Angular ?\": {\n          \"Framework\": 1,\n          \"Libarary\": 0,\n          \"ProgrammingLanguage\": 0\n        }\n      },\n      score: 0\n    };\n\n    this.GetAnswer = a => {\n      if (a == 0) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 20\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Correct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.Toggle = a => {\n      this[a].style.display = \"inline\";\n      const scoreholder = this.state.score;\n\n      if (this[a].textContent == \"Correct\") {\n        this.setState({\n          score: scoreholder + 1\n        });\n      }\n\n      this[a].remove();\n    };\n  }\n\n  render() {\n    const questions = Object.keys(this.state.q);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.keys(this.state.q[i]).map(j => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => this.Toggle(j + i),\n              children: j\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              ref: a => {\n                this[j + i] = a;\n              },\n              style: {\n                color: \"red\",\n                display: \"none\"\n              },\n              children: this.GetAnswer(this.state.q[i][j])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Questions;","map":{"version":3,"sources":["/home/sellam/Desktop/Quizz/quizz/src/Component/Questions.js"],"names":["React","Component","Questions","state","q","score","GetAnswer","a","Toggle","style","display","scoreholder","textContent","setState","remove","render","questions","Object","keys","map","i","j","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAG9BE,KAH8B,GAGtB;AACJC,MAAAA,CAAC,EAAG;AACA,2BAAoB;AAAC,uBAAc,CAAf;AAAkB,sBAAa,CAA/B;AAAkC,iCAAwB;AAA1D,SADpB;AAEA,6BAAsB;AAAC,uBAAc,CAAf;AAAkB,sBAAa,CAA/B;AAAkC,iCAAwB;AAA1D;AAFtB,OADA;AAKJC,MAAAA,KAAK,EAAG;AALJ,KAHsB;;AAAA,SAW9BC,SAX8B,GAWjBC,CAAD,IAAO;AACf,UAAGA,CAAC,IAAI,CAAR,EAAW;AACP,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAGK;AACD,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AAEJ,KAnB6B;;AAAA,SAqB9BC,MArB8B,GAqBpBD,CAAD,IAAO;AACZ,WAAKA,CAAL,EAAQE,KAAR,CAAcC,OAAd,GAAuB,QAAvB;AACA,YAAMC,WAAW,GAAG,KAAKR,KAAL,CAAWE,KAA/B;;AACA,UAAG,KAAKE,CAAL,EAAQK,WAAR,IAAuB,SAA1B,EAAqC;AACjC,aAAKC,QAAL,CAAc;AAACR,UAAAA,KAAK,EAAEM,WAAW,GAAC;AAApB,SAAd;AACH;;AACD,WAAKJ,CAAL,EAAQO,MAAR;AACH,KA5B6B;AAAA;;AA+B9BC,EAAAA,MAAM,GACN;AACI,UAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKf,KAAL,CAAWC,CAAvB,CAAlB;AACA,wBACI;AAAA,gBAAMY,SAAS,CAACG,GAAV,CAAcC,CAAC,iBACrB;AAAA,gCACI;AAAA,oBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKH,MAAM,CAACC,IAAP,CAAY,KAAKf,KAAL,CAAWC,CAAX,CAAagB,CAAb,CAAZ,EACAD,GADA,CACIE,CAAC,iBAAI;AAAA,oCACN;AAAG,cAAA,OAAO,EAAE,MAAM,KAAKb,MAAL,CAAYa,CAAC,GAAGD,CAAhB,CAAlB;AAAA,wBAAuCC;AAAvC;AAAA;AAAA;AAAA;AAAA,oBADM,eAEN;AAAG,cAAA,GAAG,EAAEd,CAAC,IAAI;AAAE,qBAAKc,CAAC,GAAGD,CAAT,IAAcb,CAAd;AAAiB,eAAhC;AAAkC,cAAA,KAAK,EAAE;AAACe,gBAAAA,KAAK,EAAE,KAAR;AAAeZ,gBAAAA,OAAO,EAAE;AAAxB,eAAzC;AAAA,wBAA2E,KAAKJ,SAAL,CAAe,KAAKH,KAAL,CAAWC,CAAX,CAAagB,CAAb,EAAgBC,CAAhB,CAAf;AAA3E;AAAA;AAAA;AAAA;AAAA,oBAFM;AAAA;AAAA;AAAA;AAAA;AAAA,kBADT;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADM;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AA/C6B;;AAmDlC,eAAenB,SAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Questions extends Component {\n\n\n    state = {\n        q : {\n            \"What is React ?\" : {\"Framework\" : 0, \"Libarary\" : 1, \"ProgrammingLanguage\" : 0}, \n            \"What is Angular ?\" : {\"Framework\" : 1, \"Libarary\" : 0, \"ProgrammingLanguage\" : 0},\n        },\n        score : 0,\n    }\n\n    GetAnswer = (a) => {\n        if(a == 0) {\n            return <p>Wrong</p>\n        }\n        else {\n            return <p>Correct</p>\n        }\n\n    }\n\n    Toggle = (a) => {\n        this[a].style.display =\"inline\";\n        const scoreholder = this.state.score;\n        if(this[a].textContent == \"Correct\") {\n            this.setState({score: scoreholder+1});\n        }\n        this[a].remove();\n    }\n\n\n    render ()\n    {\n        const questions = Object.keys(this.state.q);\n        return (\n            <div>{questions.map(i => \n            <div>\n                <p>{i}</p>\n                <ul>{Object.keys(this.state.q[i])\n                    .map(j => <div>\n                        <p onClick={() => this.Toggle(j + i)}>{j}</p>\n                        <p ref={a => { this[j + i] = a }} style={{color: \"red\", display: \"none\"}}>{this.GetAnswer(this.state.q[i][j])}</p>\n                        </div>)}\n                </ul>\n            </div>)}\n            </div>\n        );\n    }\n\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}