[{"/home/sellam/Desktop/Quizz/quizz/src/index.js":"1","/home/sellam/Desktop/Quizz/quizz/src/App.js":"2","/home/sellam/Desktop/Quizz/quizz/src/reportWebVitals.js":"3","/home/sellam/Desktop/Quizz/quizz/src/Component/QuizzApp.js":"4","/home/sellam/Desktop/Quizz/quizz/src/Component/SimpleModal.js":"5","/home/sellam/Desktop/Quizz/quizz/src/Component/Const.js":"6"},{"size":500,"mtime":1615926983621,"results":"7","hashOfConfig":"8"},{"size":145,"mtime":1616186329271,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1615926983621,"results":"10","hashOfConfig":"8"},{"size":4327,"mtime":1620180011570,"results":"11","hashOfConfig":"8"},{"size":278,"mtime":1616280039142,"results":"12","hashOfConfig":"8"},{"size":100,"mtime":1616106904546,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mc7npt",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/sellam/Desktop/Quizz/quizz/src/index.js",[],"/home/sellam/Desktop/Quizz/quizz/src/App.js",[],"/home/sellam/Desktop/Quizz/quizz/src/reportWebVitals.js",[],"/home/sellam/Desktop/Quizz/quizz/src/Component/QuizzApp.js",["29","30","31","32","33","34","35","36","37","38","39"],"import React, { Component } from 'react';\nimport './QuizzApp.css';\nimport AllConsts from './Const';\nimport Modal from './SimpleModal'\n\n\nclass Questions extends Component {\n\n\n    state = {\n        q : {\n            0 : {\"What is React ?\" : {\"Framework\" : 0, \"Libarary\" : 1, \"ProgrammingLanguage\" : 0}}, \n            1 : {\"What is Angular ?\" : {\"Framework\" : 1, \"Libarary\" : 0, \"ProgrammingLanguage\" : 0}},\n            2 : {\"Inside which HTML element do we put the JavaScript?\" : {\"<js>\" : 0, \"<javascript>\" : 0, \"<script>\" : 1}},\n            3 : {\"Where is the correct place to insert a JavaScript?\" : {\"The <head> section\" : 1, \"The <body> Section\" : 0, \"Both\" : 0}},\n            4 : {\"The external JavaScript file must contain the <script> tag.\" : {\"False\" : 1, \"True\" : 0}},\n            5 : {'How do you write \"Hello World\" in an alert box?' : {'alert(\"Hello World\")' : 1, 'alertBox(\"Hello World\")' : 0, 'msg(\"Hello World\")' : 0}},\n        },\n        current_question: 0, \n        score : 0,\n        answered: '',\n        extended: 1,\n        isCorrect : ''\n    }\n\n    componentDidUpdate() {\n        if(this.state.extended == 0){\n            this.setState({extended: 1})\n        }\n\n    }\n\n   \n   \n\n    GetAnswer = (a) => {\n        if(a == 0) {\n            return <p>Wrong</p>\n        }\n        else {\n            return <p>Correct</p>\n        }\n\n    }\n\n    Next = () => {\n        let current = this.state.current_question+1;\n        if(current < Object.keys(this.state.q).length) {\n        this.setState({current_question: current, extended: 0, isCorrect: ''});\n        }\n        \n    }\n\n    Toggle = (a, b) => {\n        this.setState({answered: b, isCorrect: \"False\"});\n        const scoreholder = this.state.score;\n        if(this[a].textContent == \"Correct\") {\n            this.setState({score: scoreholder+1, isCorrect: \"Correct\"});\n            this[a].style.color =\"green\";\n        }\n\n    }\n\n\n\n    render ()\n    {\n        \n        const arr = Object.keys(this.state.q[this.state.current_question]);\n        const holder =  this.state.q[this.state.current_question];\n        const answers = holder[arr[0]]\n        const answersArray = Object.keys(answers);\n\n\n        return (\n            <section>\n            <main>\n            <div>\n                <p className=\"text-container\">{arr[0]}</p>\n                <div className=\"quiz-options\">\n                <ul>{answersArray\n                    .map(j => <div>\n                        <div>\n                            \n                            {this.state.answered == arr[0] ?\n                            <div>\n                            <input type=\"radio\" className=\"input-radio one-a\" name=\"yes-1\" required />\n                            <label  htmlFor=\"one-a\">\n                                <span className=\"alphabet\">{answersArray.indexOf(j) + 1}</span> {j} \n                            </label> \n                            </div>\n                            :\n                            <div>\n                            <input type=\"radio\" className=\"input-radio\" id=\"one-a\" name=\"yes-1\" required />\n                            <label onClick={() => this.Toggle(arr[0] + j, arr[0])} >\n                                <span className=\"alphabet\">{answersArray.indexOf(j) + 1}</span> {j} \n                            </label>\n                            </div> }\n                        </div>\n\n                    \n                        \n                        {this.state.extended == 1 ? \n                            <p ref={a => { this[arr[0] + j] = a }} style={{color: \"red\", display: \"none\"}}>{this.GetAnswer(answers[j])}</p> \n                            : <p></p>}\n                            {this.state.isCorrect == \"False\" && <Modal iscorrect=\"Wrong\"/>}\n                            {this.state.isCorrect == \"Correct\" && <Modal iscorrect=\"Correct\"/>}\n                        </div>)}\n                        \n\n                </ul>\n                </div>\n            </div>\n            <div className=\"score-counter\">\n                    <p className=\"score-text\">Your Score: {this.state.score}</p>\n            </div>\n            {this.state.answered == arr[0] ? <a id=\"btn\" type=\"submit\" onClick={this.Next}>Next</a> : <a id=\"btn\" type=\"submit\">Next</a>}\n            </main>\n            </section>\n        );\n    } \n\n}\n\nexport default Questions;","/home/sellam/Desktop/Quizz/quizz/src/Component/SimpleModal.js",["40"],"import React from 'react';\n\nconst SimpleModal = (props) => {\n  return (\n    <div className={'modal-enter' + (props.iscorrect == \"Wrong\" ? ' worng-modal' : ' correct-modal')}>\n      <div className=\"praise\">{props.iscorrect}</div>\n    </div>\n  );\n};\n\n\nexport default SimpleModal;\n","/home/sellam/Desktop/Quizz/quizz/src/Component/Const.js",["41"],"const img = \"https://res.cloudinary.com/dvhndpbun/image/upload/v1588518387/jdsjkefkefkefefexco.svg\";",{"ruleId":"42","severity":1,"message":"43","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":17},{"ruleId":"46","severity":1,"message":"47","line":27,"column":32,"nodeType":"48","messageId":"49","endLine":27,"endColumn":34},{"ruleId":"46","severity":1,"message":"47","line":37,"column":14,"nodeType":"48","messageId":"49","endLine":37,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":57,"column":32,"nodeType":"48","messageId":"49","endLine":57,"endColumn":34},{"ruleId":"46","severity":1,"message":"47","line":85,"column":50,"nodeType":"48","messageId":"49","endLine":85,"endColumn":52},{"ruleId":"46","severity":1,"message":"47","line":103,"column":46,"nodeType":"48","messageId":"49","endLine":103,"endColumn":48},{"ruleId":"46","severity":1,"message":"47","line":106,"column":51,"nodeType":"48","messageId":"49","endLine":106,"endColumn":53},{"ruleId":"46","severity":1,"message":"47","line":107,"column":51,"nodeType":"48","messageId":"49","endLine":107,"endColumn":53},{"ruleId":"46","severity":1,"message":"47","line":117,"column":34,"nodeType":"48","messageId":"49","endLine":117,"endColumn":36},{"ruleId":"50","severity":1,"message":"51","line":117,"column":46,"nodeType":"52","endLine":117,"endColumn":92},{"ruleId":"50","severity":1,"message":"51","line":117,"column":103,"nodeType":"52","endLine":117,"endColumn":129},{"ruleId":"46","severity":1,"message":"47","line":5,"column":54,"nodeType":"48","messageId":"49","endLine":5,"endColumn":56},{"ruleId":"42","severity":1,"message":"53","line":1,"column":7,"nodeType":"44","messageId":"45","endLine":1,"endColumn":10},"no-unused-vars","'AllConsts' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'img' is assigned a value but never used."]